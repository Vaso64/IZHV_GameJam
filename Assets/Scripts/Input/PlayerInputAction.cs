//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.2.0
//     from Assets/Scripts/Input/PlayerInputAction.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

namespace GameJam.Input
{
    public partial class @PlayerInputAction : IInputActionCollection2, IDisposable
    {
        public InputActionAsset asset { get; }
        public @PlayerInputAction()
        {
            asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerInputAction"",
    ""maps"": [
        {
            ""name"": ""VRPlayer"",
            ""id"": ""dc23b6e9-aaa6-4cab-a8eb-7c583796a989"",
            ""actions"": [
                {
                    ""name"": ""HMDPosition"",
                    ""type"": ""Value"",
                    ""id"": ""fc537ef3-abd0-4671-97a4-87a9d93174bd"",
                    ""expectedControlType"": ""Vector3"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""HMDRotation"",
                    ""type"": ""Value"",
                    ""id"": ""5b98faf8-6dc3-436f-b789-69eb314faaaa"",
                    ""expectedControlType"": ""Quaternion"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""LeftControllerPosition"",
                    ""type"": ""Value"",
                    ""id"": ""bb1ee718-64b3-41c8-ab00-43ef0f46e715"",
                    ""expectedControlType"": ""Vector3"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""LeftControllerRotation"",
                    ""type"": ""Value"",
                    ""id"": ""332ff248-520a-4213-a789-e60978720acf"",
                    ""expectedControlType"": ""Quaternion"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""LeftControllerBoost"",
                    ""type"": ""Button"",
                    ""id"": ""f2214fd4-dfc6-4c96-9c11-ece06dd3f213"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""LeftControllerGrab"",
                    ""type"": ""Button"",
                    ""id"": ""9088a1ad-24f8-47eb-b1b6-7ee845358d98"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""LeftControllerUse"",
                    ""type"": ""Button"",
                    ""id"": ""e055e1fe-b8bd-4292-aefd-6ca70b0a5f7e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RightControllerPosition"",
                    ""type"": ""Value"",
                    ""id"": ""8e5c63dd-9c4c-425d-900d-a52713b08ded"",
                    ""expectedControlType"": ""Vector3"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""RightControllerRotation"",
                    ""type"": ""Value"",
                    ""id"": ""4419f09d-754b-41a4-a3d2-80ff01eb8bee"",
                    ""expectedControlType"": ""Quaternion"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""RightControllerBoost"",
                    ""type"": ""Button"",
                    ""id"": ""3dabf986-5deb-4fa7-af5d-eda23e4652e7"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RightControllerGrab"",
                    ""type"": ""Button"",
                    ""id"": ""8827996b-c71b-48b2-a98c-9e2f7e464c43"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RightControllerUse"",
                    ""type"": ""Button"",
                    ""id"": ""2576e6b1-af0b-4712-b80d-fdf25f880df5"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Rotate"",
                    ""type"": ""Value"",
                    ""id"": ""11630baa-ed49-419e-9815-6f72d381a6f4"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": ""StickDeadzone"",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""7aff64f7-8268-4c4d-b51e-8e0e237a7ba1"",
                    ""path"": ""<XRHMD>/devicePosition"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""HMDPosition"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""fa376afd-a495-4a4b-a793-81a841e60e02"",
                    ""path"": ""<XRHMD>/deviceRotation"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""HMDRotation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""98202d34-0345-4646-a5dd-79b29aab4e78"",
                    ""path"": ""<XRController>{LeftHand}/devicePosition"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LeftControllerPosition"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6e4c4904-c7c0-4f85-b5bf-44b1065f0de0"",
                    ""path"": ""<XRController>{LeftHand}/deviceRotation"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LeftControllerRotation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""505af07e-be32-4eb2-9b74-60a80f1f83c0"",
                    ""path"": ""<XRController>{RightHand}/devicePosition"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RightControllerPosition"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""cb0937e9-ec4f-4612-9c2e-e72b2ac74e9d"",
                    ""path"": ""<XRController>{RightHand}/deviceRotation"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RightControllerRotation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0a799290-7997-4ecb-ac15-adbacbc35e47"",
                    ""path"": ""<XRController>{RightHand}/touchpadTouched"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RightControllerBoost"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f3fb1f9c-2431-4c2c-a3ce-30130d002ba8"",
                    ""path"": ""<XRController>{RightHand}/gripPressed"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RightControllerGrab"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2400ab75-8462-4875-b5d9-581dd7d4d67f"",
                    ""path"": ""<XRController>{RightHand}/triggerPressed"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RightControllerUse"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""85bd0fd9-b09c-4c86-a61c-09ae86fbc37b"",
                    ""path"": ""<XRController>{LeftHand}/touchpadTouched"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LeftControllerBoost"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""78d4cfb8-ed03-421d-9534-57f509bb4363"",
                    ""path"": ""<XRController>{LeftHand}/gripPressed"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LeftControllerGrab"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8ecbd44a-97bd-46b4-8913-07607212e36c"",
                    ""path"": ""<XRController>{LeftHand}/triggerPressed"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LeftControllerUse"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ece1927a-ead6-4a3c-a07f-2ee154656c51"",
                    ""path"": ""<XRController>{RightHand}/joystick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Rotate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
            // VRPlayer
            m_VRPlayer = asset.FindActionMap("VRPlayer", throwIfNotFound: true);
            m_VRPlayer_HMDPosition = m_VRPlayer.FindAction("HMDPosition", throwIfNotFound: true);
            m_VRPlayer_HMDRotation = m_VRPlayer.FindAction("HMDRotation", throwIfNotFound: true);
            m_VRPlayer_LeftControllerPosition = m_VRPlayer.FindAction("LeftControllerPosition", throwIfNotFound: true);
            m_VRPlayer_LeftControllerRotation = m_VRPlayer.FindAction("LeftControllerRotation", throwIfNotFound: true);
            m_VRPlayer_LeftControllerBoost = m_VRPlayer.FindAction("LeftControllerBoost", throwIfNotFound: true);
            m_VRPlayer_LeftControllerGrab = m_VRPlayer.FindAction("LeftControllerGrab", throwIfNotFound: true);
            m_VRPlayer_LeftControllerUse = m_VRPlayer.FindAction("LeftControllerUse", throwIfNotFound: true);
            m_VRPlayer_RightControllerPosition = m_VRPlayer.FindAction("RightControllerPosition", throwIfNotFound: true);
            m_VRPlayer_RightControllerRotation = m_VRPlayer.FindAction("RightControllerRotation", throwIfNotFound: true);
            m_VRPlayer_RightControllerBoost = m_VRPlayer.FindAction("RightControllerBoost", throwIfNotFound: true);
            m_VRPlayer_RightControllerGrab = m_VRPlayer.FindAction("RightControllerGrab", throwIfNotFound: true);
            m_VRPlayer_RightControllerUse = m_VRPlayer.FindAction("RightControllerUse", throwIfNotFound: true);
            m_VRPlayer_Rotate = m_VRPlayer.FindAction("Rotate", throwIfNotFound: true);
        }

        public void Dispose()
        {
            UnityEngine.Object.Destroy(asset);
        }

        public InputBinding? bindingMask
        {
            get => asset.bindingMask;
            set => asset.bindingMask = value;
        }

        public ReadOnlyArray<InputDevice>? devices
        {
            get => asset.devices;
            set => asset.devices = value;
        }

        public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

        public bool Contains(InputAction action)
        {
            return asset.Contains(action);
        }

        public IEnumerator<InputAction> GetEnumerator()
        {
            return asset.GetEnumerator();
        }

        IEnumerator IEnumerable.GetEnumerator()
        {
            return GetEnumerator();
        }

        public void Enable()
        {
            asset.Enable();
        }

        public void Disable()
        {
            asset.Disable();
        }
        public IEnumerable<InputBinding> bindings => asset.bindings;

        public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
        {
            return asset.FindAction(actionNameOrId, throwIfNotFound);
        }
        public int FindBinding(InputBinding bindingMask, out InputAction action)
        {
            return asset.FindBinding(bindingMask, out action);
        }

        // VRPlayer
        private readonly InputActionMap m_VRPlayer;
        private IVRPlayerActions m_VRPlayerActionsCallbackInterface;
        private readonly InputAction m_VRPlayer_HMDPosition;
        private readonly InputAction m_VRPlayer_HMDRotation;
        private readonly InputAction m_VRPlayer_LeftControllerPosition;
        private readonly InputAction m_VRPlayer_LeftControllerRotation;
        private readonly InputAction m_VRPlayer_LeftControllerBoost;
        private readonly InputAction m_VRPlayer_LeftControllerGrab;
        private readonly InputAction m_VRPlayer_LeftControllerUse;
        private readonly InputAction m_VRPlayer_RightControllerPosition;
        private readonly InputAction m_VRPlayer_RightControllerRotation;
        private readonly InputAction m_VRPlayer_RightControllerBoost;
        private readonly InputAction m_VRPlayer_RightControllerGrab;
        private readonly InputAction m_VRPlayer_RightControllerUse;
        private readonly InputAction m_VRPlayer_Rotate;
        public struct VRPlayerActions
        {
            private @PlayerInputAction m_Wrapper;
            public VRPlayerActions(@PlayerInputAction wrapper) { m_Wrapper = wrapper; }
            public InputAction @HMDPosition => m_Wrapper.m_VRPlayer_HMDPosition;
            public InputAction @HMDRotation => m_Wrapper.m_VRPlayer_HMDRotation;
            public InputAction @LeftControllerPosition => m_Wrapper.m_VRPlayer_LeftControllerPosition;
            public InputAction @LeftControllerRotation => m_Wrapper.m_VRPlayer_LeftControllerRotation;
            public InputAction @LeftControllerBoost => m_Wrapper.m_VRPlayer_LeftControllerBoost;
            public InputAction @LeftControllerGrab => m_Wrapper.m_VRPlayer_LeftControllerGrab;
            public InputAction @LeftControllerUse => m_Wrapper.m_VRPlayer_LeftControllerUse;
            public InputAction @RightControllerPosition => m_Wrapper.m_VRPlayer_RightControllerPosition;
            public InputAction @RightControllerRotation => m_Wrapper.m_VRPlayer_RightControllerRotation;
            public InputAction @RightControllerBoost => m_Wrapper.m_VRPlayer_RightControllerBoost;
            public InputAction @RightControllerGrab => m_Wrapper.m_VRPlayer_RightControllerGrab;
            public InputAction @RightControllerUse => m_Wrapper.m_VRPlayer_RightControllerUse;
            public InputAction @Rotate => m_Wrapper.m_VRPlayer_Rotate;
            public InputActionMap Get() { return m_Wrapper.m_VRPlayer; }
            public void Enable() { Get().Enable(); }
            public void Disable() { Get().Disable(); }
            public bool enabled => Get().enabled;
            public static implicit operator InputActionMap(VRPlayerActions set) { return set.Get(); }
            public void SetCallbacks(IVRPlayerActions instance)
            {
                if (m_Wrapper.m_VRPlayerActionsCallbackInterface != null)
                {
                    @HMDPosition.started -= m_Wrapper.m_VRPlayerActionsCallbackInterface.OnHMDPosition;
                    @HMDPosition.performed -= m_Wrapper.m_VRPlayerActionsCallbackInterface.OnHMDPosition;
                    @HMDPosition.canceled -= m_Wrapper.m_VRPlayerActionsCallbackInterface.OnHMDPosition;
                    @HMDRotation.started -= m_Wrapper.m_VRPlayerActionsCallbackInterface.OnHMDRotation;
                    @HMDRotation.performed -= m_Wrapper.m_VRPlayerActionsCallbackInterface.OnHMDRotation;
                    @HMDRotation.canceled -= m_Wrapper.m_VRPlayerActionsCallbackInterface.OnHMDRotation;
                    @LeftControllerPosition.started -= m_Wrapper.m_VRPlayerActionsCallbackInterface.OnLeftControllerPosition;
                    @LeftControllerPosition.performed -= m_Wrapper.m_VRPlayerActionsCallbackInterface.OnLeftControllerPosition;
                    @LeftControllerPosition.canceled -= m_Wrapper.m_VRPlayerActionsCallbackInterface.OnLeftControllerPosition;
                    @LeftControllerRotation.started -= m_Wrapper.m_VRPlayerActionsCallbackInterface.OnLeftControllerRotation;
                    @LeftControllerRotation.performed -= m_Wrapper.m_VRPlayerActionsCallbackInterface.OnLeftControllerRotation;
                    @LeftControllerRotation.canceled -= m_Wrapper.m_VRPlayerActionsCallbackInterface.OnLeftControllerRotation;
                    @LeftControllerBoost.started -= m_Wrapper.m_VRPlayerActionsCallbackInterface.OnLeftControllerBoost;
                    @LeftControllerBoost.performed -= m_Wrapper.m_VRPlayerActionsCallbackInterface.OnLeftControllerBoost;
                    @LeftControllerBoost.canceled -= m_Wrapper.m_VRPlayerActionsCallbackInterface.OnLeftControllerBoost;
                    @LeftControllerGrab.started -= m_Wrapper.m_VRPlayerActionsCallbackInterface.OnLeftControllerGrab;
                    @LeftControllerGrab.performed -= m_Wrapper.m_VRPlayerActionsCallbackInterface.OnLeftControllerGrab;
                    @LeftControllerGrab.canceled -= m_Wrapper.m_VRPlayerActionsCallbackInterface.OnLeftControllerGrab;
                    @LeftControllerUse.started -= m_Wrapper.m_VRPlayerActionsCallbackInterface.OnLeftControllerUse;
                    @LeftControllerUse.performed -= m_Wrapper.m_VRPlayerActionsCallbackInterface.OnLeftControllerUse;
                    @LeftControllerUse.canceled -= m_Wrapper.m_VRPlayerActionsCallbackInterface.OnLeftControllerUse;
                    @RightControllerPosition.started -= m_Wrapper.m_VRPlayerActionsCallbackInterface.OnRightControllerPosition;
                    @RightControllerPosition.performed -= m_Wrapper.m_VRPlayerActionsCallbackInterface.OnRightControllerPosition;
                    @RightControllerPosition.canceled -= m_Wrapper.m_VRPlayerActionsCallbackInterface.OnRightControllerPosition;
                    @RightControllerRotation.started -= m_Wrapper.m_VRPlayerActionsCallbackInterface.OnRightControllerRotation;
                    @RightControllerRotation.performed -= m_Wrapper.m_VRPlayerActionsCallbackInterface.OnRightControllerRotation;
                    @RightControllerRotation.canceled -= m_Wrapper.m_VRPlayerActionsCallbackInterface.OnRightControllerRotation;
                    @RightControllerBoost.started -= m_Wrapper.m_VRPlayerActionsCallbackInterface.OnRightControllerBoost;
                    @RightControllerBoost.performed -= m_Wrapper.m_VRPlayerActionsCallbackInterface.OnRightControllerBoost;
                    @RightControllerBoost.canceled -= m_Wrapper.m_VRPlayerActionsCallbackInterface.OnRightControllerBoost;
                    @RightControllerGrab.started -= m_Wrapper.m_VRPlayerActionsCallbackInterface.OnRightControllerGrab;
                    @RightControllerGrab.performed -= m_Wrapper.m_VRPlayerActionsCallbackInterface.OnRightControllerGrab;
                    @RightControllerGrab.canceled -= m_Wrapper.m_VRPlayerActionsCallbackInterface.OnRightControllerGrab;
                    @RightControllerUse.started -= m_Wrapper.m_VRPlayerActionsCallbackInterface.OnRightControllerUse;
                    @RightControllerUse.performed -= m_Wrapper.m_VRPlayerActionsCallbackInterface.OnRightControllerUse;
                    @RightControllerUse.canceled -= m_Wrapper.m_VRPlayerActionsCallbackInterface.OnRightControllerUse;
                    @Rotate.started -= m_Wrapper.m_VRPlayerActionsCallbackInterface.OnRotate;
                    @Rotate.performed -= m_Wrapper.m_VRPlayerActionsCallbackInterface.OnRotate;
                    @Rotate.canceled -= m_Wrapper.m_VRPlayerActionsCallbackInterface.OnRotate;
                }
                m_Wrapper.m_VRPlayerActionsCallbackInterface = instance;
                if (instance != null)
                {
                    @HMDPosition.started += instance.OnHMDPosition;
                    @HMDPosition.performed += instance.OnHMDPosition;
                    @HMDPosition.canceled += instance.OnHMDPosition;
                    @HMDRotation.started += instance.OnHMDRotation;
                    @HMDRotation.performed += instance.OnHMDRotation;
                    @HMDRotation.canceled += instance.OnHMDRotation;
                    @LeftControllerPosition.started += instance.OnLeftControllerPosition;
                    @LeftControllerPosition.performed += instance.OnLeftControllerPosition;
                    @LeftControllerPosition.canceled += instance.OnLeftControllerPosition;
                    @LeftControllerRotation.started += instance.OnLeftControllerRotation;
                    @LeftControllerRotation.performed += instance.OnLeftControllerRotation;
                    @LeftControllerRotation.canceled += instance.OnLeftControllerRotation;
                    @LeftControllerBoost.started += instance.OnLeftControllerBoost;
                    @LeftControllerBoost.performed += instance.OnLeftControllerBoost;
                    @LeftControllerBoost.canceled += instance.OnLeftControllerBoost;
                    @LeftControllerGrab.started += instance.OnLeftControllerGrab;
                    @LeftControllerGrab.performed += instance.OnLeftControllerGrab;
                    @LeftControllerGrab.canceled += instance.OnLeftControllerGrab;
                    @LeftControllerUse.started += instance.OnLeftControllerUse;
                    @LeftControllerUse.performed += instance.OnLeftControllerUse;
                    @LeftControllerUse.canceled += instance.OnLeftControllerUse;
                    @RightControllerPosition.started += instance.OnRightControllerPosition;
                    @RightControllerPosition.performed += instance.OnRightControllerPosition;
                    @RightControllerPosition.canceled += instance.OnRightControllerPosition;
                    @RightControllerRotation.started += instance.OnRightControllerRotation;
                    @RightControllerRotation.performed += instance.OnRightControllerRotation;
                    @RightControllerRotation.canceled += instance.OnRightControllerRotation;
                    @RightControllerBoost.started += instance.OnRightControllerBoost;
                    @RightControllerBoost.performed += instance.OnRightControllerBoost;
                    @RightControllerBoost.canceled += instance.OnRightControllerBoost;
                    @RightControllerGrab.started += instance.OnRightControllerGrab;
                    @RightControllerGrab.performed += instance.OnRightControllerGrab;
                    @RightControllerGrab.canceled += instance.OnRightControllerGrab;
                    @RightControllerUse.started += instance.OnRightControllerUse;
                    @RightControllerUse.performed += instance.OnRightControllerUse;
                    @RightControllerUse.canceled += instance.OnRightControllerUse;
                    @Rotate.started += instance.OnRotate;
                    @Rotate.performed += instance.OnRotate;
                    @Rotate.canceled += instance.OnRotate;
                }
            }
        }
        public VRPlayerActions @VRPlayer => new VRPlayerActions(this);
        public interface IVRPlayerActions
        {
            void OnHMDPosition(InputAction.CallbackContext context);
            void OnHMDRotation(InputAction.CallbackContext context);
            void OnLeftControllerPosition(InputAction.CallbackContext context);
            void OnLeftControllerRotation(InputAction.CallbackContext context);
            void OnLeftControllerBoost(InputAction.CallbackContext context);
            void OnLeftControllerGrab(InputAction.CallbackContext context);
            void OnLeftControllerUse(InputAction.CallbackContext context);
            void OnRightControllerPosition(InputAction.CallbackContext context);
            void OnRightControllerRotation(InputAction.CallbackContext context);
            void OnRightControllerBoost(InputAction.CallbackContext context);
            void OnRightControllerGrab(InputAction.CallbackContext context);
            void OnRightControllerUse(InputAction.CallbackContext context);
            void OnRotate(InputAction.CallbackContext context);
        }
    }
}
